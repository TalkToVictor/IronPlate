{"version":3,"sources":["services/config.js","services/index.js","components/home/Home.js","components/404/NotFound.js","components/auth/SignUp.js","components/auth/LogIn.js","components/profile/Profile.js","components/auth/GoogleAuth.js","components/auth/GoogleAuthLogin.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","process","REACT_APP_API","console","log","token","window","localStorage","getItem","API","axios","create","withCredentials","headers","Authorization","actions","getUser","a","get","signUp","user","post","res","setItem","data","logIn","logOut","removeItem","Home","props","useState","fruit","setFruit","useEffect","onClick","NotFound","SignUp","email","setEmail","password","setPassword","onSubmit","e","preventDefault","then","setUser","catch","response","error","name","type","onChange","target","value","LogIn","Profile","history","push","src","imageUrl","responseGoogle","onResponse","profileObj","googleId","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","to","exact","path","render","component","GoogleAuth","GoogleAuthLogin","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db4661c.chunk.js","sourcesContent":["\nlet baseURL; \nif( process.env.NODE_ENV === 'production' ) {\n  if(process.env.REACT_APP_API){ \n    baseURL = `${process.env.REACT_APP_API}/api` //Netlify \n  } else {\n    baseURL = `/api` //Heroku or 5000 \n  }\n} else {\n  baseURL = `http://localhost:5000/api` //3000\n}\n\nexport default baseURL","import axios from 'axios';\nimport baseURL from './config.js'\n\n\nconsole.log('coolbeans', baseURL)\n\nconst token = window.localStorage.getItem('token')\nconsole.log(token, process.env)\n\nconst API = axios.create({ withCredentials: true, baseURL,  headers: { Authorization: `Bearer ${token}` }});\n\nconst actions = {\n  getUser: async () => {\n    //Check if token \n    // let token = window.localStorage.getItem('token')    \n    return await API.get(`/user`)\n  },\n  signUp: async (user) => {\n    let res = await API.post('/signup', user)\n    window.localStorage.setItem('token', res.data?.token)\n    return res\n  },\n  logIn: async (user) => {\n    let res = await API.post('/login', user)\n    window.localStorage.setItem('token', res.data?.token)\n    return res\n  },\n  logOut: async () => {\n    window.localStorage.removeItem('token')\n    return await API.get('/logout')\n  }\n};\n\n\n// service.post('/api/posts').then(res => console.log(res))\n\nexport default actions;\n","import React, { Component, useState, useEffect } from 'react';\nimport actions from '../../services/index'\n\n\n// class Home extends Component {\n\n//   state = {\n//     fruit: ''\n//   }\n\n//   async componentDidMount() { //UseEffect \n//     console.log(\"Home mounted\")\n//     this.setState({ \n//       fruit:'banana'\n//     })\n//   }\n//   render() {\n//     return (\n//       <div>\n//         Home {this.state.fruit}\n//       </div>\n//     );\n//   }\n// }\n\n\nconst Home = (props) => {\n  let [fruit, setFruit] = useState('kiwi')\n\n  useEffect(()=>{\n    setFruit('passion fruit')\n  }, [])\n\n  const changeFruit = () => {\n    setFruit(\"pineapple\")\n  }\n\n  return( \n    <div>\n      Home {fruit}\n      <button onClick={changeFruit}>Change Fruit</button>\n    </div>\n  )\n}\n\nexport default Home;\n\n\n\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, {Fragment, useState } from 'react';\nimport actions from '../../services/index'\n\nconst SignUp = (props) => {\n\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        console.log(email, password)\n        actions.signUp({email, password}).then(user=> {\n            console.log(user.data)\n            props.setUser({...user.data})  \n        }).catch(({ response }) => console.error(response.data));\n    }\n\n    return (\n        <Fragment>\n            <h2>SignUP</h2>\n            <form onSubmit={handleSubmit}>\n                <input name=\"email\" type=\"email\" onChange={(e)=>setEmail(e.target.value)} />\n                <input name=\"password\" type=\"password\" onChange={(e)=> setPassword(e.target.value)} />\n                <input type=\"submit\" value=\"Sign Up\"/>\n            </form>\n        </Fragment>        \n    )\n}\n\nexport default SignUp;","import React, { Fragment, useState } from 'react';\nimport actions from '../../services/index'\n\n\nfunction LogIn(props){\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        console.log(email, password)\n        actions.logIn({email, password}).then(user=> {\n            console.log(user.data)\n            props.setUser({...user.data})  \n        }).catch(({ response }) => console.error(response.data));\n    }\n    return (\n        <Fragment>\n            <h2>LogIn</h2>\n            <form onSubmit={handleSubmit}>\n                <input name=\"email\" type=\"email\" onChange={(e)=>setEmail(e.target.value)} />\n                <input name=\"password\" type=\"password\"  onChange={(e)=>setPassword(e.target.value)} />\n                <input type=\"submit\" value=\"Log In\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default LogIn;\n\n","import React, { Component } from 'react';\n\nconst Profile = (props) => {\n    console.log(props)\n\n    if(!props?.user){ //FIX ME\n        props.history.push('/log-in') \n    }   \n    return (\n        <div>\n            Profile\n            Welcome {props?.user?.email} <img src={props?.user?.imageUrl} />!!! \n        </div>\n    );\n}\n\nexport default Profile;","import React from \"react\";\nimport actions from \"../../services/index\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst responseGoogle = (props) => {\n  const onResponse = (response) => {\n    console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .signUp(user)\n      .then((user) => {\n        props.setUser({ ...user.data });\n      })\n      .catch(({ response }) => console.error(response.data));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Signup\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React from \"react\";\nimport actions from \"../../services/index\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst responseGoogle = (props) => {\n  const onResponse = (response) => {\n    console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .logIn(user)\n      .then((user) => {\n        props.setUser({ ...user.data });\n      })\n      .catch(({ response }) => console.error(response.data));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Login\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React, { Component, Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, NavLink } from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\nimport NotFound from \"./components/404/NotFound.js\";\nimport SignUp from \"./components/auth/SignUp\";\nimport LogIn from \"./components/auth/LogIn\";\nimport Profile from \"./components/profile/Profile\";\nimport actions from \"./services/index\";\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport GoogleAuthLogin from \"./components/auth/GoogleAuthLogin\";\n\nconst App = () => {\n  \n  let [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function getUser() {\n      let user = await actions.getUser();\n      console.log('user is',user)\n      setUser(user.data)\n    }\n    getUser();    \n  }, [])\n\n  const logOut = async () => {\n    let res = await actions.logOut();\n    setUser(null);\n  };\n\n  return(\n    <BrowserRouter>\n      {user?.email}\n      <nav>\n        <NavLink to=\"/\">Home ||</NavLink>\n\n        {user ? (\n          <Fragment>\n            <NavLink onClick={logOut} to=\"/\">\n              Log Out |\n            </NavLink>\n            <NavLink to=\"/profile\">Profile||</NavLink>\n          </Fragment>\n          ) : (\n          <Fragment>\n            <NavLink to=\"/sign-up\">Sign Up |</NavLink>\n            <NavLink to=\"/log-in\">Log In |</NavLink>\n          </Fragment>\n        )}\n      </nav>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n        <Route\n          exact\n          path=\"/sign-up\"\n          render={(props) => <SignUp {...props} setUser={setUser} />}\n        />\n        <Route\n          exact\n          path=\"/log-in\"\n          render={(props) => <LogIn {...props} setUser={setUser} />}\n        />\n        <Route\n          exact\n          path=\"/profile\"\n          render={(props) => <Profile {...props} user={user} />}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n      {!user && <GoogleAuth setUser={setUser} />}\n      {!user && <GoogleAuthLogin setUser={setUser} />}\n    </BrowserRouter>\n  )\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}